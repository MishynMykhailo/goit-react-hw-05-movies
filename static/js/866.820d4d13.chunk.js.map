{"version":3,"file":"static/js/866.820d4d13.chunk.js","mappings":"8NACA,EAAqB,oBAArB,EAA8C,oBAA9C,EAAsE,mBAAtE,EAAmG,yB,SCGpF,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAKR,IAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAyBH,GAAII,KAAKL,KACjC,CAACC,IAEAF,EACF,OAAIA,EAAQO,KAAKC,SAAWR,EAAQO,KAAKC,QAAQC,OAAS,GAEtD,iCACE,mBACA,eAAIC,UAAWC,EAAf,SACGX,EAAQO,KAAKC,QAAQI,KAAI,SAAAC,GAAG,OAC3B,gBAAIH,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,WACE,oCACCE,EAAIC,WAEP,eAAGJ,UAAWC,EAAd,WACE,kCACCE,EAAIE,WAAWC,MAAM,EAAG,QAE3B,eAAGN,UAAWC,EAAd,WACE,qCACCE,EAAII,aAXiBJ,EAAIX,aAoBtC,iCACE,mBACA,eAAIQ,UAAWC,EAAf,yC,uLCxCFO,EAAQC,EAAQ,MAGf,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6FACCC,EAAWH,EAAMI,OAAO,CAC5BC,QAAS,kDACTC,IAAK,GACLC,OAAQ,CACNC,QAAS,sCALR,kBASoBL,EAASM,MAT7B,cASGC,EATH,yBAUIA,GAVJ,gCAYHC,QAAQC,MAAR,MAZG,gFAgBA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,gFACCX,EAAWH,EAAMI,OAAO,CAC5BC,QAAS,4CACTC,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTO,SAAU,QACVC,KAAM,EACNC,eAAe,EACfH,MAAOA,KATN,kBAaoBX,EAASM,MAb7B,cAaGC,EAbH,yBAcIA,GAdJ,gCAgBHC,QAAQC,MAAR,MAhBG,gFAqBA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAmCC,GAAnC,gFACChB,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCc,GAC/Cb,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTO,SAAU,QACVK,mBAAoB,YAPnB,kBAWoBjB,EAASM,MAX7B,cAWGC,EAXH,yBAYIA,GAZJ,gCAcHC,QAAQC,MAAR,MAdG,gFAmBA,SAAeS,EAAtB,kC,aAAO,O,oBAAA,WAA+BF,GAA/B,gFACChB,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCc,EAAxC,YACPb,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTO,SAAU,WANT,kBAUoBZ,EAASM,MAV7B,cAUGC,EAVH,yBAWIA,GAXJ,gCAaHC,QAAQC,MAAR,MAbG,gFAiBA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gFACChB,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCc,EAAxC,YACPb,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTO,SAAU,WANT,kBAUoBZ,EAASM,MAV7B,cAUGC,EAVH,yBAWIA,GAXJ,gCAaHC,QAAQC,MAAR,MAbG","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","service/FetchApi/FetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Reviews_ul__WbKOU\",\"li\":\"Reviews_li__ayXZk\",\"p\":\"Reviews_p__MUo9k\",\"warning\":\"Reviews_warning__N11iG\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieApi from '../../service/FetchApi/FetchApi';\nimport s from '../Reviews/Reviews.module.css';\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    movieApi.fetchApiReviews(id).then(setReviews);\n  }, [id]);\n\n  if (reviews) {\n    if (reviews.data.results && reviews.data.results.length > 0) {\n      return (\n        <>\n          <hr />\n          <ul className={s.ul}>\n            {reviews.data.results.map(res => (\n              <li className={s.li} key={res.id}>\n                <p className={s.p}>\n                  <b>Author: </b>\n                  {res.author}\n                </p>\n                <p className={s.p}>\n                  <b>Date: </b>\n                  {res.created_at.slice(0, 10)}\n                </p>\n                <p className={s.p}>\n                  <b>Comment: </b>\n                  {res.content}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </>\n      );\n    }\n    return (\n      <>\n        <hr />\n        <h2 className={s.warning}>No reviewsüßê</h2>\n      </>\n    );\n  }\n}\n","const axios = require('axios');\n\n/// FETCH TRENDS\nexport async function fetchApiTrends() {\n  const instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n/// FETCH SEARCH\nexport async function fetchApiSearch(query) {\n  const instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/search/movie',\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n      query: query,\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//FETCH PRIMARYINFO\nexport async function fetchApiPrimaryInfo(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n      append_to_response: 'videos',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//FETCH CREDITS\nexport async function fetchApiCredits(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n//FETCH REVIEWS\nexport async function fetchApiReviews(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Reviews","useState","reviews","setReviews","id","useParams","useEffect","movieApi","then","data","results","length","className","s","map","res","author","created_at","slice","content","axios","require","fetchApiTrends","instance","create","baseURL","url","params","api_key","get","response","console","error","fetchApiSearch","query","language","page","include_adult","fetchApiPrimaryInfo","movieId","append_to_response","fetchApiCredits","fetchApiReviews"],"sourceRoot":""}