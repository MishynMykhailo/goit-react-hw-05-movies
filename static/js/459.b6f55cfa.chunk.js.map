{"version":3,"file":"static/js/459.b6f55cfa.chunk.js","mappings":"+NACA,GAAgB,GAAK,iBAAiB,GAAK,iBAAiB,EAAI,iB,SCIjD,SAASA,IACtB,IACA,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAyBH,GAAII,KAAKL,KACjC,CAACC,KAGF,8BACGF,IACC,iCACE,mBACA,eAAIO,UAAWC,EAAAA,GAAf,SACGR,EAAQS,KAAKC,KAAKC,KAAI,SAAAC,GACrB,OAAIA,EAAOC,cAEP,eAA2BN,UAAWC,EAAAA,GAAtC,UACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,gBACEM,IAAG,UApBF,mCAoBE,OAAsBF,EAAOC,cAChCE,IAAG,UAAKH,EAAOI,SAEjB,eAAGT,UAAWC,EAAAA,EAAd,WACE,iCADF,IACgBI,EAAOK,kBAEvB,eAAGV,UAAWC,EAAAA,EAAd,WACE,sCADF,IACqBI,EAAOM,iBAVvBN,EAAOO,WAgBbC,QAAQC,MAAM,yB,uLCvC7BC,EAAQC,EAAQ,MAGf,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6FACCC,EAAWH,EAAMI,OAAO,CAC5BC,QAAS,kDACTC,IAAK,GACLC,OAAQ,CACNC,QAAS,sCALR,kBASoBL,EAASM,MAT7B,cASGC,EATH,yBAUIA,GAVJ,gCAYHZ,QAAQC,MAAR,MAZG,gFAgBA,SAAeY,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,gFACCT,EAAWH,EAAMI,OAAO,CAC5BC,QAAS,4CACTC,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTK,SAAU,QACVC,KAAM,EACNC,eAAe,EACfH,MAAOA,KATN,kBAaoBT,EAASM,MAb7B,cAaGC,EAbH,yBAcIA,GAdJ,gCAgBHZ,QAAQC,MAAR,MAhBG,gFAqBA,SAAeiB,EAAtB,kC,aAAO,O,oBAAA,WAAmCC,GAAnC,gFACCd,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCY,GAC/CX,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTK,SAAU,WANT,kBAUoBV,EAASM,MAV7B,cAUGC,EAVH,yBAWIA,GAXJ,gCAaHZ,QAAQC,MAAR,MAbG,gFAkBA,SAAemB,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,gFACCd,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCY,EAAxC,YACPX,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTK,SAAU,WANT,kBAUoBV,EAASM,MAV7B,cAUGC,EAVH,yBAWIA,GAXJ,gCAaHZ,QAAQC,MAAR,MAbG,gFAiBA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gFACCd,EAAWH,EAAMI,OAAO,CAC5BC,QAAQ,sCAAD,OAAwCY,EAAxC,YACPX,IAAK,GACLC,OAAQ,CACNC,QAAS,mCACTK,SAAU,WANT,kBAUoBV,EAASM,MAV7B,cAUGC,EAVH,yBAWIA,GAXJ,gCAaHZ,QAAQC,MAAR,MAbG","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","service/FetchApi/FetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Cast_ul__3sV5I\",\"li\":\"Cast_li__keKqF\",\"p\":\"Cast_p__BobP4\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieApi from '../../service/FetchApi/FetchApi';\nimport s from '../Cast/Cast.module.css';\nexport default function Cast() {\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n  const [credits, setCredits] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    movieApi.fetchApiCredits(id).then(setCredits);\n  }, [id]);\n\n  return (\n    <>\n      {credits && (\n        <>\n          <hr />\n          <ul className={s.ul}>\n            {credits.data.cast.map(credit => {\n              if (credit.profile_path) {\n                return (\n                  <li key={credit.credit_id} className={s.li}>\n                    <div className={s.cardCast}>\n                      <img\n                        src={`${BASE_IMAGE_URL}${credit.profile_path}`}\n                        alt={`${credit.name}`}\n                      />\n                      <p className={s.p}>\n                        <b>Name:</b> {credit.original_name}\n                      </p>\n                      <p className={s.p}>\n                        <b>Character:</b> {credit.character}\n                      </p>\n                    </div>\n                  </li>\n                );\n              }\n              return console.error('Not Found');\n            })}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n","const axios = require('axios');\n\n/// FETCH TRENDS\nexport async function fetchApiTrends() {\n  const instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n/// FETCH SEARCH\nexport async function fetchApiSearch(query) {\n  const instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/search/movie',\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n      query: query,\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//FETCH PRIMARYINFO\nexport async function fetchApiPrimaryInfo(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//FETCH CREDITS\nexport async function fetchApiCredits(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n//FETCH REVIEWS\nexport async function fetchApiReviews(movieId) {\n  const instance = axios.create({\n    baseURL: `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    url: '',\n    params: {\n      api_key: 'f5f018a555195129a19f56d8b4d0a827',\n      language: 'en-US',\n    },\n  });\n  try {\n    const response = await instance.get();\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Cast","useState","credits","setCredits","id","useParams","useEffect","movieApi","then","className","s","data","cast","map","credit","profile_path","src","alt","name","original_name","character","credit_id","console","error","axios","require","fetchApiTrends","instance","create","baseURL","url","params","api_key","get","response","fetchApiSearch","query","language","page","include_adult","fetchApiPrimaryInfo","movieId","fetchApiCredits","fetchApiReviews"],"sourceRoot":""}